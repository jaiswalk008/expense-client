name: CI

on:
  push:
    branches: ["main"]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t jaiswalk008/expense-client .

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push jaiswalk008/expense-client:latest

      # SSH into EC2 and deploy the new image
      - name: SSH into EC2 and pull the new image
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Define container and image names
            CONTAINER_NAME=expense-client
            IMAGE_NAME=jaiswalk008/expense-client:latest
            # Debug: output image name
            echo "IMAGE_NAME: $IMAGE_NAME"
            
            # Pull the latest image
            docker pull $IMAGE_NAME
            
            # Stop and remove the existing container if it exists
            if [ $(docker ps -aq -f name=$CONTAINER_NAME) ]; then
              docker stop $CONTAINER_NAME
              docker rm $CONTAINER_NAME
            fi

            # Run a new container with the updated image
            docker run -T -p 3000:3000 $IMAGE_NAME
